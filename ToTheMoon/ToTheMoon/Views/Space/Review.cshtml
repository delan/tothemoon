@model ToTheMoon.Models.Space
@using ToTheMoon.Models

@{
    ViewBag.Title = "Edit";
}

<h2><b>Review</b> Space</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.Name)</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.key)

        <div class="form-group">
            @Html.LabelFor(model => model.capacity, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.capacity) GB
                @{if (ViewBag.canChangeCapacity)
                {
                    @Html.ActionLink(" ", "ChangeCapacity", "Space", new { ID = Model.key }, new { @class = "glyphicon glyphicon-plus-sign" })
                }
                }

                @Html.ValidationMessageFor(model => model.capacity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.used, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.used) GB
                @Html.ValidationMessageFor(model => model.used)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.increase, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.increase) GB
                @Html.ValidationMessageFor(model => model.increase)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PI, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PI.FirstName) @Html.DisplayFor(model => model.PI.LastName)
                @Html.ValidationMessageFor(model => model.PI)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Data Managers", new { @class = "col-md-2" })
            <div class="col-md-10">
                @{foreach (UserSpace sp in ViewBag.dataManagers)
                {
                    @String.Join(" ", sp.user.FirstName, sp.user.LastName);
                                                                          if (!sp.space.PIKey.Equals(sp.userKey))
                                                                          {
                                                                            @(" | ")
                                                                            @Html.ActionLink("Edit", "../UserSpace/Edit/" + sp.ProductId);
                    @Html.ActionLink("Remove", "../UserSpace/Delete/" + sp.ProductId);
                                                                          }
                }
                }
                @Html.ValidationMessageFor(model => model.PI)
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Read/Write Researchers", new { @class = "col-md-2" })
            <div class="col-md-10">
                @{foreach (UserSpace sp in ViewBag.readWriteResearchers)
                {
                    @String.Join(" ", sp.user.FirstName, sp.user.LastName);
                    @(" | ")
                    @Html.ActionLink("Edit", "../UserSpace/Edit/" + sp.ProductId);
                    @Html.ActionLink("Remove", "../UserSpace/Delete/" + sp.ProductId);
                }
                }
                @Html.ValidationMessageFor(model => model.PI)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Read-Only Researchers", new { @class = "col-md-2" })
            <div class="col-md-10">
                @{foreach (UserSpace sp in ViewBag.readOnlyResearchers)
                {
                    @String.Join(" ", sp.user.FirstName, sp.user.LastName);
                    @(" | ")
                    @Html.ActionLink("Edit", "../UserSpace/Edit/" + sp.ProductId);
                    @Html.ActionLink("Remove", "../UserSpace/Delete/" + sp.ProductId);
                }
                }
                @Html.ValidationMessageFor(model => model.PI)
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to Dashboard", "Dashboard", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
