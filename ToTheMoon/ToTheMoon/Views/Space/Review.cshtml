@model ToTheMoon.Models.Space
@using ToTheMoon.Models

@{
    ViewBag.Title = "Review Space";
}

<h2><b>Review</b> Space</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.Name)</h4>
        @Html.HiddenFor(model => model.Name)
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.key)

        <div class="form-group">
            @Html.LabelFor(model => model.capacity, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.capacity) GB

                    @{if (ViewBag.canChangeCapacity)
                    {
                        @(" | ")
                        @Html.ActionLink("Add more", "ChangeCapacity", "Space", new { ID = Model.key }, null)
                    }
                    else if (ViewBag.canRequestSpace)
                    {
                        @(" | ")
                        @Html.ActionLink("Request more", "Create", "IncreaseSpaceRequest", new { ID = Model.key }, null)
                    }
                    }
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.used, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.used) GB
                    @{if (ViewBag.canChangeCapacity)
                    {
                        @(" | ")
                        @Html.ActionLink("Manual change", "ChangeCapacity", "Space", new { ID = Model.key }, null)
                    }           
                    }     
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.increase, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.increase) GB
                </p>
            </div>
            <div class="col-md-6">
                <p class="form-control-static">
                    @Html.ValidationMessageFor(model => model.increase)
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PI, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @if (ViewBag.canChangePI == true)
                {
                    List<SelectListItem> userList = new List<SelectListItem>();
                    foreach (ApplicationUser user in ViewBag.dataManagerUsers)
                    {
                        SelectListItem i = new SelectListItem();
                        i.Text = user.FirstName + " " + user.LastName;
                        i.Value = user.Id;
                        userList.Add(i);
                    }
                    @Html.DropDownListFor(model => model.PIKey, new SelectList(userList, "Value", "Text"), new { @class = "form-control" })
                }
                else
                {
                    <p class="form-control-static">
                        @Html.DisplayFor(model => model.PI.FirstName)
                        @(" ")
                        @Html.DisplayFor(model => model.PI.LastName)
                    </p>
                }
            </div>
            <div class="col-md-6">
                <p class="form-control-static">
                    @Html.ValidationMessageFor(model => model.increase)
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Data Managers", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <p class="form-control-static">
                    @{foreach (UserSpace sp in ViewBag.dataManagers)
                    {
                        @String.Join(" ", sp.user.FirstName, sp.user.LastName)
                        if (!sp.space.PIKey.Equals(sp.userKey) && ViewBag.canChangeRoles)
                        {
                            @(" | ")
                            @Html.ActionLink("Edit", "Edit", "UserSpace", new { @ID = sp.ProductId }, null);
                            @(" | ")
                            @Html.ActionLink("Remove", "Delete", "UserSpace", new { @ID = sp.ProductId }, null);
                        }

                        <br />
                    }
                    }

                    @if (ViewBag.canAddUsers)
                    {
                        @Html.ActionLink("Add More", "Create", "UserSpace", new { ID = Model.key }, null)                        
                    }
                </p>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Read/Write Researchers", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <p class="form-control-static">
                    @{foreach (UserSpace sp in ViewBag.readWriteResearchers)
                    {
                        @String.Join(" ", sp.user.FirstName, sp.user.LastName);
                        if (ViewBag.canChangeRoles)
                        {
                            @(" | ")
                            @Html.ActionLink("Edit", "Edit", "UserSpace", new { @ID = sp.ProductId }, null);
                            @(" | ")
                            @Html.ActionLink("Remove", "Delete", "UserSpace", new { @ID = sp.ProductId }, null);
                        }

                        <br />
                    }
                    }

                    @if (ViewBag.canAddUsers)
                    {
                        @Html.ActionLink("Add More", "Create", "UserSpace", new { ID = Model.key }, null)                        
                    }
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Read-Only Researchers", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <p class="form-control-static">
                    @{foreach (UserSpace sp in ViewBag.readOnlyResearchers)
                    {
                        @String.Join(" ", sp.user.FirstName, sp.user.LastName);
                        if (ViewBag.canChangeRoles)
                        {
                            @(" | ")
                            @Html.ActionLink("Edit", "Edit", "UserSpace", new { @ID = sp.ProductId }, null);
                            @(" | ")
                            @Html.ActionLink("Remove", "Delete", "UserSpace", new { @ID = sp.ProductId }, null);
                        }
                        
                        <br />
                    }
                    }

                    @if (ViewBag.canAddUsers)
                    {
                        @Html.ActionLink("Add More", "Create", "UserSpace", new { ID = Model.key }, null)                        
                    }
                </p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />
<div>
    @Html.ActionLink("Back to Dashboard", "Dashboard", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
